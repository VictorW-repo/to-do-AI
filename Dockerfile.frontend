# ===== Build Stage =====
FROM node:18-alpine AS builder

WORKDIR /app

# Install dependencies needed for build
RUN apk add --no-cache libc6-compat

# Copy package files
COPY frontend/package.json frontend/package-lock.json* ./

# Install dependencies
RUN npm ci

# Copy all frontend source files
COPY frontend/ ./

# Set environment variables explicitly
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Build the Next.js application
RUN npm run build

# ===== Production Stage =====
FROM node:18-alpine AS production

WORKDIR /app

# Install production dependencies only
COPY --from=builder /app/package.json /app/package-lock.json* ./
RUN npm ci --production

# Copy built application
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.js ./next.config.js

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Expose port
EXPOSE 3000

# Start the Next.js application
CMD ["npm", "start"]

# ===== Development Stage =====
FROM node:18-alpine AS development

WORKDIR /app

# Copy package files
COPY frontend/package.json frontend/package-lock.json* ./

# Install all dependencies including dev dependencies
RUN npm ci

# Copy frontend source
COPY frontend/ ./

# Expose port
EXPOSE 3000

# Set development environment
ENV NODE_ENV=development

# Start development server
CMD ["npm", "run", "dev"]

# Use the development or production stage based on build arg
FROM ${NODE_ENV:-development}